<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz Question</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #FF9933, #138808); /* Saffron to Green gradient */
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding-top: 70px; /* Space for the fixed header */
        }

        header {
            background-color: #fff;
            color: #138808;
            width: 100%;
            padding: 15px 0;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .logo {
            display: flex;
            align-items: center;
        }

        .logo img {
            padding: 10px;
            width: 70px;
            height: auto;
            margin-right: 10px;
        }

        nav ul {
            list-style: none;
            display: flex;
            margin: 0;
            padding: 0;
        }

        nav ul li {
            margin-left: 20px;
        }

        nav ul li a {
            text-decoration: none;
            color: #FF9933;
            font-weight: bold;
            transition: color 0.3s;
        }

        nav ul li a:hover {
            color: #f0f0f0;
        }

        .join-now {
            background-color: #138808;
            border: none;
            padding: 10px 20px;
            color: #fff;
            font-weight: bold;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .join-now:hover {
            background-color: #0c6b06;
        }

        .question-container {
            background-color: #fff;
            color: #333;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            max-width: 600px;
            width: 100%;
            text-align: center;
            margin-top: 20px;
        }

        .question {
            font-size: 24px;
            margin-bottom: 40px;
            color: #138808; /* Green color */
        }

        .options {
            list-style: none;
            padding: 0;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .options li {
            background-color: #FF9933; /* Saffron color */
            color: #fff;
            margin-bottom: 10px;
            padding: 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
            width: 40%; /* Ensures two options per row */
        }

        .options li:hover, .options li.selected {
            background-color: #f0f0f0;
            color: #138808; /* Green color */
        }

        .timer {
            font-size: 20px;
            font-weight: bold;
            color: #FF9933; /* Saffron color */
            margin-bottom: 20px;
        }

        .question-level {
            font-size: 18px;
            color: #FF9933;
            margin-bottom: 10px;
        }

        .options li.correct {
            background-color: #138808;
            color: #fff;
        }

        .options li.incorrect {
            background-color: #FF0000;
            color: #fff;
        }

        .next-button {
            background-color: #138808;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
            display: none;
        }

        .next-button:hover {
            background-color: #0c6b06;
        }

        .next-button {
            background-color: #138808;
            color: #fff;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
            display: none;
        }
        .next-button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        .next-button:hover:not(:disabled) {
            background-color: #0c6b06;
        }


    </style>
</head>
<body>
    <header>
        <nav>
            <div class="logo">
                <h2>Quiz</h2>
                <img src="/userSide/img/india.png" alt="India Logo">
            </div>
            <ul>
                <li><a href="#">Home</a></li>
                <li><a href="#">Leaderboard</a></li>
                <li><a href="#">Profile</a></li>
            </ul>
            <button class="join-now">Join Now</button>
        </nav>
    </header>

    <div class="question-container">
        <div class="timer" id="timer">Time left: 60s</div>
        <div class="question-level" id="questionLevel">LEVEL: <%=question.type%></div>
        <div class="question" id="questionText"><%=question.question%></div>
        <ul class="options" id="optionsList">
            <% question.choices.forEach((choice) => { %>
                <li data-choice="<%=choice%>"><%=choice%></li>
            <% }) %>
        </ul>
        <button class="next-button" id="nextButton" disabled>Next Question</button>
    </div>

    <script>
        let timeLeft = 60;
        let timerInterval;
        let currentQuestion = JSON.parse('<%- JSON.stringify(question)  %>'.replace(/&#34;/g,Â '"'));
        let selectedAnswer;

        const timerElement = document.getElementById('timer');
        const questionLevelElement = document.getElementById('questionLevel');
        const questionTextElement = document.getElementById('questionText');
        const optionsListElement = document.getElementById('optionsList');
        const nextButton = document.getElementById('nextButton');

        function startTimer() {
            clearInterval(timerInterval);
            timerInterval = setInterval(() => {
                timeLeft--;
                timerElement.textContent = `Time left: ${timeLeft}s`;

                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    handleTimeout();
                }
            }, 1000);
        }

        function handleTimeout() {
            disableOptions();
            showCorrectAnswer();
            nextButton.disabled = false;
            nextButton.style.display = 'block';
        }

        function disableOptions() {
            const options = document.querySelectorAll('.options li');
            options.forEach(option => option.style.pointerEvents = 'none');
        }

        function showCorrectAnswer() {
            const options = document.querySelectorAll('.options li');
            options.forEach(option => {
                if (option.dataset.choice === currentQuestion.answer) {
                    option.classList.add('correct');
                }
            });
        }

        function selectOption(optionElement) {
            if (selectedAnswer) return; // Prevent multiple selections
            const options = document.querySelectorAll('.options li');
            options.forEach(option => option.classList.remove('selected'));
            optionElement.classList.add('selected');
            selectedAnswer = optionElement.dataset.choice;

            clearInterval(timerInterval);
            checkAnswer();
        }

        function checkAnswer() {
            disableOptions();
            if (selectedAnswer === currentQuestion.answer) {
                document.querySelector('.selected').classList.add('correct');
            } else {
                document.querySelector('.selected').classList.add('incorrect');
                showCorrectAnswer();
            }
            nextButton.disabled = false;
            nextButton.style.display = 'block';
            updateUserScore();
        }

        async function updateUserScore() {
            try {
                const response = await fetch('/update-score', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        questionId: currentQuestion._id,
                        userAnswer: selectedAnswer,
                        timeLeft: timeLeft
                    }),
                });

                if (!response.ok) {
                    throw new Error('Failed to update score');
                }

                const result = await response.json();
                console.log('Score updated:', result);

                if (result.quizMasterAchieved) {
                    alert("Congratulations! You are now a Quiz Master!");
                    window.location.href = '/'; 
                } else if (result.levelChanged) {
                    alert(`Congratulations! You've advanced to ${result.updatedUser.level} level!`);
                }

            

            } catch (error) {
                console.error('Error updating score:', error);
            }
        }

        async function loadQuestion() {
            try {
                const response = await fetch('/get-question');
                if (!response.ok) {
                    throw new Error('Failed to load question');
                }

                currentQuestion = await response.json();
                displayQuestion(currentQuestion);
            } catch (error) {
                console.error('Error loading question:', error);
            }
        }

        function displayQuestion(question) {
            questionLevelElement.textContent = `Level: ${question.type}`;
            questionTextElement.textContent = question.question;
            optionsListElement.innerHTML = '';

            question.choices.forEach(choice => {
                const li = document.createElement('li');
                li.textContent = choice;
                li.dataset.choice = choice;
                li.onclick = () => selectOption(li);
                optionsListElement.appendChild(li);
            });

            selectedAnswer = null;
            nextButton.disabled = true;
            nextButton.style.display = 'none';

            timeLeft = 60;
            startTimer();
        }

        nextButton.addEventListener('click', () => {
            loadQuestion();
        });

        // Initial setup for the first question
        function initializeFirstQuestion() {
            displayQuestion(currentQuestion);
            const options = document.querySelectorAll('.options li');
            options.forEach(option => {
                option.onclick = () => selectOption(option);
            });
        }

        // Call this function when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            initializeFirstQuestion();
            const savedTime = sessionStorage.getItem('timeLeft');
            if (savedTime) {
                timeLeft = parseInt(savedTime);
            }
            startTimer();
        });

        // Prevent page refresh
        window.addEventListener('beforeunload', (event) => {
            event.preventDefault();
            event.returnValue = '';
        });

        // Save timer state periodically
        setInterval(() => {
            sessionStorage.setItem('timeLeft', timeLeft);
        }, 1000);
    </script>
</body>
</html>
